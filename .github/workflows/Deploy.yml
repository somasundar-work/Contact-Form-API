name: CI/CD
description: "CI/CD pipeline for FeatureFlag repository"

on:
  push:
    branches:
      - main
  pull_request:
    paths:
      - "src/**"
      - "tests/**"
    branches:
      - main
      - release/**
  workflow_dispatch:

jobs:
  lint:
    name: Checks
    uses: ./.github/workflows/CodeFormatting.yml

  Checks:
    if: ${{ github.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/pull/') }}
    name: Checks
    uses: ./.github/workflows/Checks.yml

  CI:
    name: Build & Test
    uses: ./.github/workflows/BuildProject.yml

  CD:
    needs: [Checks, CI]
    if: ${{ github.ref == 'refs/heads/main' }}
    name: Deployment
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: "8.0.x"

      - name: Print Date Time
        run: date

      - name: Determine Build Version
        id: versioning
        run: |
          VERSION=$(date +'%y%m.%d')
          VERSION="${VERSION}.${{ github.run_number }}"
          echo $VERSION
          echo "version=$VERSION" >> "$GITHUB_OUTPUT"
          echo "tag=v$VERSION" >> "$GITHUB_OUTPUT"

      # - name: Current Directory
      #   run: pwd

      # - name: Restore
      #   run: dotnet restore

      # - name: Build
      #   run: dotnet build --configuration Release --no-restore

      # - name: Tag Release
      #   run: |
      #     git config user.name "github-actions"
      #     git config user.email "github-actions@github.com"
      #     git tag ${{ steps.versioning.outputs.tag }}
      #     git push origin ${{ steps.versioning.outputs.tag }}

      # - name: Create GitHub Release
      #   uses: softprops/action-gh-release@v2
      #   with:
      #     tag_name: ${{ steps.versioning.outputs.tag }}
      #     name: Release ${{ steps.versioning.outputs.version }}
      #     files: ./nupkg/*.nupkg
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
